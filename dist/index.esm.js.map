{
  "version": 3,
  "sources": ["../src/index.tsx"],
  "sourcesContent": ["import React from \"react\";\n\ninterface Props {\n  collectionId: string;\n}\n\nconst App: React.FC<Props> = (props) => (\n  <>ok</>\n  // <CollectionProvider>\n  //   <Bloom {...props} />\n  // </CollectionProvider>\n);\n\n// const Bloom: React.FC<Props> = ({ collectionId }) => {\n//   const store = useCollectionState();\n//   const { vault } = store;\n//   const [collection, setCollection] = useState<CollectionNormalized>();\n//   /**\n//    * todo: add wrapping context and store vault\n//    */\n//   useEffect(() => {\n//     /**\n//      * load collection using @iiif/vault\n//      */\n\n//     vault\n//       .loadCollection(collectionId)\n//       .then((data: any) => setCollection(data))\n//       .catch((error: any) => {\n//         console.error(`Collection failed to load: ${error}`);\n//       })\n//       .finally(() => {});\n//   }, []);\n\n//   if (!collection || !collection.items) {\n//     console.log(`The IIIF Collection ${collectionId} failed to load.`);\n//     return <></>;\n//   }\n\n//   if (collection.items.length === 0) {\n//     console.log(`The IIIF collection ${collectionId} does not contain items.`);\n//     return <></>;\n//   }\n\n//   return (\n//     <StyledBloom>\n//       <Header\n//         label={collection.label as InternationalString}\n//         summary={collection.summary}\n//         homepage={collection.homepage as any as ContentResource[]}\n//       />\n//       <Items items={collection.items as CollectionItems[]} />\n//     </StyledBloom>\n//   );\n// };\n\n// const StyledBloom = styled(\"div\", { padding: \"$4 0\" });\n\nexport default App;\n"],
  "mappings": "AAAA,qBAMA,GAAM,GAAuB,AAAC,GAC5B,gCAAE,IAAE,EAmDC,EAAQ",
  "names": []
}
